{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\FullStack\\\\exercises\\\\part2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResult = filterResult => {\n  if (countriesWithFilter.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: countriesWithFilter.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: c\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = SearchResult;\nfunction App() {\n  _s();\n  const baseUrl = \"https://studies.cs.helsinki.fi/restcountries/\";\n  const [country, setCountry] = useState('');\n  const [countriesWithFilter, setCountriesWithFilter] = useState([]);\n  const [allCountries, setallCountries] = useState([]);\n\n  // get list of all countries\n  useEffect(() => {\n    axios.get(baseUrl + \"api/all\").then(response => {\n      setallCountries(response.data.map(obj => obj.name.common));\n    });\n  }, []);\n  useEffect(() => {\n    if (allCountries.length !== 0) {\n      setCountriesWithFilter(allCountries.filter(c => c.toUpperCase().startsWith(country.toUpperCase())));\n    }\n  }, [country]);\n  const onSearch = event => {\n    setCountry(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: country,\n      onChange: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"M7/nT+L+c+A0+xTbKkKV4EAmsDQ=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchResult\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","SearchResult","filterResult","countriesWithFilter","length","children","map","c","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","baseUrl","country","setCountry","setCountriesWithFilter","allCountries","setallCountries","get","then","response","data","obj","name","common","filter","toUpperCase","startsWith","onSearch","event","target","value","onChange","_c2","$RefreshReg$"],"sources":["D:/Programming/FullStack/exercises/part2/countries/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios'\n\nconst SearchResult = filterResult => {\n  if (countriesWithFilter.length > 10) {\n    return <div>{countriesWithFilter.map(c => <div>{c}</div>)}</div>\n  } else {\n    return <div>Too many matches, specify another filter</div>\n  }\n}\n\nfunction App() {\n  const baseUrl = \"https://studies.cs.helsinki.fi/restcountries/\"\n  const [country, setCountry] = useState('')\n  const [countriesWithFilter, setCountriesWithFilter] = useState([])\n  const [allCountries, setallCountries] = useState([])\n\n  // get list of all countries\n  useEffect(() => {\n    axios.get(baseUrl + \"api/all\")\n    .then(response => {\n      setallCountries(response.data.map(obj => obj.name.common))   \n    })\n  }, [])\n\n  useEffect(() => {\n    if (allCountries.length !== 0) {\n      setCountriesWithFilter(allCountries.filter(c => c.toUpperCase().startsWith(country.toUpperCase())))\n    }\n  }, [country])\n\n  const onSearch = (event) => {\n    setCountry(event.target.value)\n  }\n\n  return (\n    <div>\n      find countries&nbsp;\n      <input value={country} onChange={onSearch} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAGC,YAAY,IAAI;EACnC,IAAIC,mBAAmB,CAACC,MAAM,GAAG,EAAE,EAAE;IACnC,oBAAOJ,OAAA;MAAAK,QAAA,EAAMF,mBAAmB,CAACG,GAAG,CAACC,CAAC,iBAAIP,OAAA;QAAAK,QAAA,EAAME;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClE,CAAC,MAAM;IACL,oBAAOX,OAAA;MAAAK,QAAA,EAAK;IAAwC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5D;AACF,CAAC;AAAAC,EAAA,GANKX,YAAY;AAQlB,SAASY,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAG,+CAA+C;EAC/D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,mBAAmB,EAAEe,sBAAsB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACuB,GAAG,CAACN,OAAO,GAAG,SAAS,CAAC,CAC7BO,IAAI,CAACC,QAAQ,IAAI;MAChBH,eAAe,CAACG,QAAQ,CAACC,IAAI,CAAClB,GAAG,CAACmB,GAAG,IAAIA,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACd,IAAIsB,YAAY,CAACf,MAAM,KAAK,CAAC,EAAE;MAC7Bc,sBAAsB,CAACC,YAAY,CAACS,MAAM,CAACrB,CAAC,IAAIA,CAAC,CAACsB,WAAW,CAAC,CAAC,CAACC,UAAU,CAACd,OAAO,CAACa,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACrG;EACF,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EAEb,MAAMe,QAAQ,GAAIC,KAAK,IAAK;IAC1Bf,UAAU,CAACe,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,oBACElC,OAAA;IAAAK,QAAA,GAAK,oBAEH,eAAAL,OAAA;MAAOkC,KAAK,EAAElB,OAAQ;MAACmB,QAAQ,EAAEJ;IAAS;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACG,EAAA,CA9BQD,GAAG;AAAAuB,GAAA,GAAHvB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAwB,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}