{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\FullStack\\\\exercises\\\\part2\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios, { all } from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"https://studies.cs.helsinki.fi/restcountries/\";\nconst SearchResult = _ref => {\n  let {\n    result\n  } = _ref;\n  const requestCountryInfo = country => {\n    const request = axios.get(baseUrl + `api/name/${country.toLowerCase()}`);\n    const dataPromise = request.then(response => response.data);\n    return dataPromise;\n  };\n  if (!result.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Too many matches. Specify another filter\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 30\n  }, this);\n};\n_c = SearchResult;\nfunction App() {\n  _s();\n  const [country, setCountry] = useState('');\n  const [foundCountries, setFoundCountries] = useState([]);\n  const [allCountries, setAllCountries] = useState([]);\n\n  // get list of all countries\n  useEffect(() => {\n    axios.get(baseUrl + \"api/all\").then(response => {\n      const allCountriesNew = response.data.map(obj => obj.name.common);\n      setAllCountries(allCountriesNew);\n    });\n  }, []);\n  useEffect(() => {\n    const filterResult = allCountries.filter(c => c.toUpperCase().includes(country.toUpperCase()));\n    if (filterResult > 10) setFoundCountries([]);else if (filterResult.length < 10 && filterResult !== 1) setFoundCountries(filterResult);else {\n      setFoundCountries(filterResult);\n      setCountry(filterResult[0]);\n    }\n  }, [country]);\n  const onSearch = event => {\n    setCountry(event.target.value);\n  };\n  if (allCountries.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data has been received\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"find countries\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: country !== null && country !== void 0 ? country : '',\n        onChange: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchResult, {\n        filterResult: foundCountries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(App, \"2D6Gc9zf4x2g0QgXUG2nzbgd8lA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchResult\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","all","jsxDEV","_jsxDEV","baseUrl","SearchResult","_ref","result","requestCountryInfo","country","request","get","toLowerCase","dataPromise","then","response","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","setCountry","foundCountries","setFoundCountries","allCountries","setAllCountries","allCountriesNew","map","obj","name","common","filterResult","filter","c","toUpperCase","includes","onSearch","event","target","value","onChange","_c2","$RefreshReg$"],"sources":["D:/Programming/FullStack/exercises/part2/countries/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios, { all } from 'axios'\n\nconst baseUrl = \"https://studies.cs.helsinki.fi/restcountries/\"\n\nconst SearchResult = ({result}) => {  \n  const requestCountryInfo = (country) => {\n    const request = axios.get(baseUrl + `api/name/${country.toLowerCase()}`)\n    const dataPromise = request.then(response => response.data)\n    return dataPromise\n  }\n\n  if (!result.length) return <div>Too many matches. Specify another filter</div>\n\n}\n\nfunction App() {  \n  const [country, setCountry] = useState('')\n  const [foundCountries, setFoundCountries] = useState([])\n  const [allCountries, setAllCountries] = useState([])\n\n  // get list of all countries\n  useEffect(() => {\n    axios.get(baseUrl + \"api/all\")\n    .then(response => {\n      const allCountriesNew = response.data.map(obj => obj.name.common)\n      setAllCountries(allCountriesNew)          \n    })\n  }, [])\n\n  useEffect(() => {\n      const filterResult = allCountries.filter(c => c.toUpperCase().includes(country.toUpperCase()))\n      if (filterResult > 10) setFoundCountries([])\n      else if(filterResult.length < 10 && filterResult !== 1) setFoundCountries(filterResult)\n      else {\n        setFoundCountries(filterResult)\n        setCountry(filterResult[0])\n      }   \n  }, [country])\n\n  const onSearch = (event) => {\n    setCountry(event.target.value)\n  }\n\n  if (allCountries.length === 0) {\n    return <div>No data has been received</div>\n  } else {\n    return (\n      <div>\n        find countries&nbsp;\n        <input value={country ?? ''} onChange={onSearch} />\n        <SearchResult filterResult={foundCountries} />\n      </div>\n    )\n  }\n\n  \n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}