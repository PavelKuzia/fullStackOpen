{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\FullStack\\\\exercises\\\\part2\\\\phonebook\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    number: '040-123456',\n    id: 1\n  }, {\n    name: 'Ada Lovelace',\n    number: '39-44-5323523',\n    id: 2\n  }, {\n    name: 'Dan Abramov',\n    number: '12-43-234345',\n    id: 3\n  }, {\n    name: 'Mary Poppendieck',\n    number: '39-23-6423122',\n    id: 4\n  }]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const addName = event => {\n    event.preventDefault();\n    if (persons.filter(p => p.name === newName).length != 0) {\n      alert(`${newName} is already added to phonebook`);\n    } else {\n      const personObj = {\n        name: newName,\n        number: newNumber\n      };\n      setPersons(persons.concat(personObj));\n      setNewName('');\n      setNewNumber('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: e => setNewName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newNumber,\n          onChange: e => setNewNumber(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), persons.map((person, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [person.name, \" \", person.number]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3n/7XwiayQkBbkE8M48/2X9R0AM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","persons","setPersons","name","number","id","newName","setNewName","newNumber","setNewNumber","addName","event","preventDefault","filter","p","length","alert","personObj","concat","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","e","target","type","map","person","i","_c","$RefreshReg$"],"sources":["D:/Programming/FullStack/exercises/part2/phonebook/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n      { name: 'Arto Hellas', number: '040-123456', id: 1 },\n      { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },\n      { name: 'Dan Abramov', number: '12-43-234345', id: 3 },\n      { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }\n  ])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const addName = (event) => {\n    event.preventDefault()\n    if (persons.filter(p => p.name === newName).length != 0) {\n      alert(`${newName} is already added to phonebook`)\n    } else {\n      const personObj = {name: newName, number: newNumber}\n      setPersons(persons.concat(personObj))\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <h2>Add a new</h2>\n      <form onSubmit={addName}>\n        <div>\n          name: <input value={newName} onChange={e => setNewName(e.target.value)}/>\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={e => setNewNumber(e.target.value)}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {persons.map((person, i) => <div key={i}>{person.name} {person.number}</div>)}\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}